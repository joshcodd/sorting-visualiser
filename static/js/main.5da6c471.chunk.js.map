{"version":3,"sources":["components/SidebarButton/SidebarButton.jsx","components/Slider/Slider.jsx","components/DropdownButton/DropdownButton.jsx","components/Sidebar/Sidebar.jsx","components/SortingBar/SortingBar.jsx","components/Visualizer/Visualizer.jsx","components/App/sortingAlgorithms/quickSort.js","components/App/sortingAlgorithms/bubbleSort.js","components/App/sortingAlgorithms/mergeSort.js","components/App/sortingAlgorithms/insertionSort.js","components/App/App.jsx","serviceWorker.js","index.js"],"names":["SidebarButton","props","currentAlgorithm","className","text","onClick","event","action","target","value","Slider","type","min","max","sliderType","id","onChange","onMouseUp","DropdownButton","useState","isDown","setIsDown","currentIsDown","style","background","display","sliderValue","handleSliderChange","handleSliderOnMouseUp","displayValueInOutput","Sidebar","setSliderValue","algorithmSpeed","setSpeed","handleSortButton","onSortButtonPress","handleResetButton","onReset","onSpeedChange","SortingBar","heightStyle","marginLeft","margin","width","height","Visualizer","bars","targetRef","useRef","marginSpace","barWidth","dimensions","setDimensions","useLayoutEffect","current","offsetWidth","offsetHeight","console","log","ref","map","barHeight","index","key","length","timeLine","quickSort","array","sortingArray","quickSortMain","low","high","pivot","i","j","push","swap","partition","rightLow","temp","bubbleSort","mergeSort","mergeSortMain","mid","Math","floor","merge","tempArray","k","insertionSort","App","setBars","setCurrentAlgorithm","currentSpeed","setCurrentSpeed","changeBarsClass","newClass","document","getElementsByClassName","generateArray","numOfBars","barsArray","randomBarSize","random","pauseFor","ms","Promise","resolve","setTimeout","searchType","a","sortedArray","arrayBars","mergeResult","barOneIndex","barTwoIndex","newHeight","barOne","barTwo","bubbleResult","heightOne","HeightTwo","quickResult","pivotIndex","barIndex","insertionResult","alert","useEffect","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.5da6c471.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./sidebarbutton.css\";\n\nfunction SidebarButton(props) {\n  let currentAlgorithm = props.currentAlgorithm;\n\n  function handleClick(event) {\n    if (currentAlgorithm === \"\") {\n      props.action(event.target.value);\n    }\n  }\n\n  return (\n    <button\n      className={\n        (currentAlgorithm === props.text\n          ? \"sidebarButton sidebarButtonActive \"\n          : \"sidebarButton \") + props.className\n      }\n      onClick={handleClick}\n      value={props.text}\n    >\n      {props.text}\n    </button>\n  );\n}\n\nexport default SidebarButton;\n","import React from \"react\";\nimport \"./slider.css\";\n\nfunction Slider(props) {\n  let value = props.value;\n\n  function handleChange(event) {\n    props.onChange(event.target.value);\n  }\n\n  function handleOnMouseUp(event) {\n    props.onMouseUp(event.target.value);\n  }\n\n  return (\n    <input\n      type=\"range\"\n      min=\"5\"\n      max=\"100\"\n      className={\"slider slider\" + props.sliderType}\n      id=\"myRange\"\n      onChange={props.currentAlgorithm === \"\" ? handleChange : null}\n      onMouseUp={props.currentAlgorithm === \"\" ? handleOnMouseUp : null}\n      value={value}\n    />\n  );\n}\n\nexport default Slider;\n","import React, { useState } from \"react\";\nimport \"./dropdownbutton.css\";\nimport Slider from \"../Slider/Slider\";\nimport SidebarButton from \"../SidebarButton/SidebarButton\";\n\nfunction DropdownButton(props) {\n  const [isDown, setIsDown] = useState(false);\n\n  function handleDrop() {\n    let currentIsDown = \"\";\n    if (isDown === true) {\n      currentIsDown = false;\n    } else if (isDown === false) {\n      currentIsDown = true;\n    }\n    setIsDown(currentIsDown);\n  }\n\n  return (\n    <div className=\"dropdown\">\n      <SidebarButton\n        className={\n          (isDown ? \"sidebarButton sidebarButtonActive \" : \"sidebarButton \") +\n          props.className\n        }\n        text={props.text}\n        action={handleDrop}\n        currentAlgorithm={\"\"}\n      />\n\n      <ul\n        className=\"dropdownList\"\n        style={isDown ? { background: \"visible\" } : { display: \"none\" }}\n      >\n        <div className=\"popTagTriangle\"></div>\n        <li className=\"dropDownItem\">\n          {props.text === \"Speed\" && <label className=\"right\">Fast</label>}\n          <Slider\n            value={props.sliderValue}\n            currentAlgorithm={props.currentAlgorithm}\n            onChange={props.handleSliderChange}\n            onMouseUp={props.handleSliderOnMouseUp}\n            sliderType={props.text}\n          />\n          {props.text === \"Speed\" && <label className=\"right\">Slow</label>}\n        </li>\n        {props.displayValueInOutput && (\n          <div className=\"sliderOutput\">{props.sliderValue}</div>\n        )}\n      </ul>\n    </div>\n  );\n}\n\nexport default DropdownButton;\n","import React, { useState } from \"react\";\nimport \"./sidebar.css\";\nimport SidebarButton from \"../SidebarButton/SidebarButton\";\nimport DropdownButton from \"../DropdownButton/DropdownButton\";\n\nfunction Sidebar(props) {\n  const [sliderValue, setSliderValue] = useState(50);\n  const [algorithmSpeed, setSpeed] = useState(10);\n\n  function handleSortButton(value) {\n    props.onSortButtonPress(value);\n  }\n\n  function handleResetButton() {\n    props.onReset(sliderValue);\n  }\n\n  function handleSizeSliderOnMouseUp(value) {\n    props.onReset(value);\n  }\n\n  function handleSizeSliderChange(value) {\n    setSliderValue(value);\n  }\n\n  function handleSpeedSliderChange(value) {\n    setSpeed(value);\n  }\n\n  function handleSpeedSliderOnMouseUp(value) {\n    props.onSpeedChange(value);\n  }\n\n  return (\n    <div className=\"sidebar\">\n      <div className=\"title\">\n        <h1> Sorting Algorithm Visualizer </h1>{\" \"}\n      </div>\n\n      <label className=\"sidebarSectionTitle\">ALGORITHMS</label>\n      <SidebarButton\n        text=\"Insertion\"\n        action={handleSortButton}\n        currentAlgorithm={props.currentAlgorithm}\n      />\n      <SidebarButton\n        text=\"Bubble\"\n        action={handleSortButton}\n        currentAlgorithm={props.currentAlgorithm}\n      />\n      <SidebarButton\n        text=\"Quick\"\n        action={handleSortButton}\n        currentAlgorithm={props.currentAlgorithm}\n      />\n      <SidebarButton\n        text=\"Merge\"\n        action={handleSortButton}\n        currentAlgorithm={props.currentAlgorithm}\n        className=\"btn-last\"\n      />\n\n      <label className=\"sidebarSectionTitle\">COLLECTION</label>\n      <SidebarButton\n        text=\"Reset\"\n        action={handleResetButton}\n        currentAlgorithm={props.currentAlgorithm}\n      />\n\n      <DropdownButton\n        text=\"Speed\"\n        action={handleResetButton}\n        handleSliderChange={handleSpeedSliderChange}\n        handleSliderOnMouseUp={handleSpeedSliderOnMouseUp}\n        currentAlgorithm={props.currentAlgorithm}\n        sliderValue={algorithmSpeed}\n        displayValueInOutput={false}\n      />\n\n      <DropdownButton\n        text=\"Size\"\n        action={handleResetButton}\n        handleSliderChange={handleSizeSliderChange}\n        handleSliderOnMouseUp={handleSizeSliderOnMouseUp}\n        currentAlgorithm={props.currentAlgorithm}\n        sliderValue={sliderValue}\n        displayValueInOutput={true}\n      />\n    </div>\n  );\n}\n\nexport default Sidebar;\n","import React from \"react\";\nimport \"./sortingbar.css\";\n\nfunction SortingBar(props) {\n  const heightStyle = {\n    marginLeft: props.margin,\n    width: props.width,\n    height: props.height,\n  };\n  return <div className=\"bar slowTransition\" style={heightStyle}></div>;\n}\n\nexport default SortingBar;\n","import React, { useRef, useState, useLayoutEffect } from \"react\";\nimport \"./visualizer.css\";\nimport SortingBar from \"../SortingBar/SortingBar\";\n\nfunction Visualizer(props) {\n  const bars = props.bars;\n  const targetRef = useRef();\n  const [dimensions, setDimensions] = useState({ marginSpace: 0, barWidth: 0 });\n\n  useLayoutEffect(() => {\n    if (targetRef.current) {\n      let width = targetRef.current.offsetWidth;\n      let height = targetRef.current.offsetHeight;\n      let marginSpace = (width / 100) * 20;\n      let barWidth = width - marginSpace;\n\n      console.log(height);\n      console.log(width);\n      console.log(marginSpace);\n\n      setDimensions({\n        marginSpace: marginSpace,\n        barWidth: barWidth,\n      });\n    }\n  }, []);\n\n  return (\n    <div ref={targetRef} className=\"visualizer\">\n      {props.bars.map((barHeight, index) => {\n        return (\n          <SortingBar\n            key={index}\n            height={barHeight}\n            width={dimensions.barWidth}\n            margin={dimensions.marginSpace / bars.length}\n          />\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Visualizer;\n","//Referenced: https://www.geeksforgeeks.org/quick-sort/\n//Function(s) to take in an array and return :\n// - A timeLine, I.E an array of 3 values. 1: pivot, 2: index of bar and 3: bar height to set.\n// - The sorted array\nconst timeLine = [];\n\n//Function to call the recursive quickSortMain and return the needed values to the app component.\nexport default function quickSort(array) {\n  timeLine.length = 0; //clear array\n  const sortingArray = [...array];\n  quickSortMain(sortingArray, 0, sortingArray.length - 1);\n  return { timeLine: timeLine, bars: sortingArray };\n}\n\n//Recursive quicksort function, selects pivot and quicksorts either side of pivot.\nfunction quickSortMain(sortingArray, low, high) {\n  if (low < high) {\n    let pivot = partition(sortingArray, low, high);\n    let leftHigh = pivot - 1;\n    let rightLow = pivot + 1;\n\n    quickSortMain(sortingArray, low, leftHigh);\n    quickSortMain(sortingArray, rightLow, high);\n  }\n}\n\n//Places pivot at last index of array section and then moves all elements > to the right of it,\n// and all elements < to the left of it.\nfunction partition(sortingArray, low, high) {\n  let pivot = high;\n  let i = low - 1;\n\n  for (let j = low; j < high; j++) {\n    if (sortingArray[j] < sortingArray[pivot]) {\n      i++;\n      //swap and push elements to swap, to the timeLine.\n      timeLine.push([pivot, j, sortingArray[i]]);\n      timeLine.push([pivot, i, sortingArray[j]]);\n      swap(sortingArray, i, j);\n    }\n  }\n\n  //Move pivot to correct position\n  timeLine.push([pivot, i + 1, sortingArray[pivot]]);\n  timeLine.push([pivot, pivot, sortingArray[i + 1]]);\n  swap(sortingArray, i + 1, high);\n  pivot = i + 1;\n\n  return pivot;\n}\n\n//Function that takes an array, and two index. Elements at index are swapped over.\nfunction swap(array, i, j) {\n  let temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n}\n","//Function to take in an array and return :\n// - A timeLine, I.E an array of pairs where the two values are the index of bars to be swapped in\n//   order to visualize a bubble sort step by step.\n// - The sorted array\nconst timeLine = [];\nexport default function bubbleSort(array) {\n  timeLine.length = 0; //clear array\n  const sortingArray = [...array];\n  for (let i = 0; i < sortingArray.length; i++) {\n    for (let j = 0; j < sortingArray.length; j++) {\n      // If value after current is greater, swap values and add swap to timeLine.\n      if (sortingArray[j] >= sortingArray[j + 1]) {\n        timeLine.push([j, j + 1, sortingArray[j], sortingArray[j + 1]]);\n        swap(sortingArray, j, j + 1);\n      }\n    }\n  }\n  return { timeLine: timeLine, bars: sortingArray };\n}\n\n//Function that takes an array, and two index. Elements at index are swapped over.\nfunction swap(array, i, j) {\n  let temp = array[i];\n  array[i] = array[j];\n  array[j] = temp;\n}\n","//Function(s) to take in an array and return :\n// - A timeLine, I.E an array of 3 values. 1: pivot, 2: index of bar and 3: bar height to set.\n// - The sorted array\nconst timeLine = [];\n\n//Function to call the recursive mergesortMain and return the needed values to the app component.\nexport default function mergeSort(array) {\n  timeLine.length = 0; //clear array\n  const sortingArray = [...array];\n\n  mergeSortMain(sortingArray);\n  return { timeLine: timeLine, bars: sortingArray };\n}\n\n//Main merge sort function, recursively splits array into smaller sections, then merges together.\nfunction mergeSortMain(sortingArray, low = 0, high = sortingArray.length - 1) {\n  if (low < high) {\n    const mid = Math.floor((low + high) / 2);\n    mergeSortMain(sortingArray, low, mid);\n    mergeSortMain(sortingArray, mid + 1, high);\n    merge(sortingArray, low, high);\n  }\n}\n\n//Merge split arrays back together\nfunction merge(sortingArray, low, high) {\n  let tempArray = [];\n  //i left index, j right index\n  let i = low;\n  let k = low;\n\n  let mid = Math.floor((low + high) / 2);\n  let j = mid + 1;\n\n  while (i <= mid && j <= high) {\n    if (sortingArray[i] <= sortingArray[j]) {\n      timeLine.push([k, i, sortingArray[i]]);\n      tempArray[k++] = sortingArray[i++];\n    } else {\n      timeLine.push([k, j, sortingArray[j]]);\n      tempArray[k++] = sortingArray[j++];\n    }\n  }\n\n  while (i <= mid) {\n    timeLine.push([k, i, sortingArray[i]]);\n    tempArray[k++] = sortingArray[i++];\n  }\n\n  while (j <= high) {\n    timeLine.push([k, j, sortingArray[j]]);\n    tempArray[k++] = sortingArray[j++];\n  }\n\n  for (let i = low; i < k; i++) {\n    sortingArray[i] = tempArray[i];\n  }\n}\n","//Function to take in an array and return :\n// - A timeLine, I.E an array of pairs where the two values are the index of bars to be swapped in\n//   order to visualize a insertion sort step by step.\n// - The sorted array\nlet timeLine = [];\nexport default function insertionSort(array) {\n  timeLine.length = 0; //clear array\n  let sortingArray = [...array];\n  for (let i = 1; i < sortingArray.length; i++) {\n    let key = sortingArray[i];\n    let j = i - 1;\n\n    while (j >= 0 && sortingArray[j] > key) {\n      sortingArray[j + 1] = sortingArray[j];\n      timeLine.push([j + 1, sortingArray[j]]);\n      j = j - 1;\n    }\n    sortingArray[j + 1] = key;\n    timeLine.push([j + 1, key]);\n  }\n  return { timeLine: timeLine, bars: sortingArray };\n}\n","import React, { useState, useEffect } from \"react\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport Visualizer from \"../Visualizer/Visualizer\";\nimport quickSort from \"./sortingAlgorithms/quickSort\";\nimport bubbleSort from \"./sortingAlgorithms/bubbleSort\";\nimport mergeSort from \"./sortingAlgorithms/mergeSort\";\nimport insertionSort from \"./sortingAlgorithms/insertionSort\";\n\nfunction App() {\n  let [bars, setBars] = useState([]);\n  let [currentAlgorithm, setCurrentAlgorithm] = useState(\"\");\n  let [currentSpeed, setCurrentSpeed] = useState(10);\n\n  function changeBarsClass(newClass) {\n    const bars = document.getElementsByClassName(\"bar\");\n    for (let i = 0; i < bars.length; i++) {\n      bars[i].className = newClass;\n    }\n  }\n\n  //Generate and return array of random values (bar heights)\n  function generateArray(numOfBars) {\n    changeBarsClass(\"bar slowTransition\");\n    const barsArray = [];\n    for (let i = 0; i < numOfBars; i++) {\n      const randomBarSize = Math.floor(Math.random() * 700);\n      barsArray.push(randomBarSize);\n    }\n    setBars(barsArray);\n  }\n\n  //Generate array on initially.\n  useEffect(() => {\n    generateArray(50);\n    // eslint-disable-next-line\n  }, []);\n\n  //Set height to ensure all bars animate/transition on reset.\n  useEffect(() => {\n    const arrayBars = document.getElementsByClassName(\"bar\");\n    for (let i = 0; i < arrayBars.length; i++) {\n      arrayBars[i].style.height = \"350px\";\n\n      setTimeout(function () {\n        arrayBars[i].style.height = `${bars[i]}px`;\n      }, 0.1);\n    }\n  }, [bars]);\n\n  //delay\n  function pauseFor(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  //Use correct sort and timeline parser, for sort selected.\n  async function handleTimeline(searchType) {\n    changeBarsClass(\"bar fastTransition\");\n\n    setCurrentAlgorithm(searchType);\n    let timeLine = [];\n    let sortedArray = [];\n    const arrayBars = document.getElementsByClassName(\"bar\");\n\n    switch (searchType) {\n      case \"Merge\":\n        const mergeResult = mergeSort(bars);\n        timeLine = mergeResult.timeLine;\n        sortedArray = mergeResult.bars;\n        for (let i = 0; i < timeLine.length; i++) {\n          const [barOneIndex, barTwoIndex, newHeight] = timeLine[i];\n          const barOne = arrayBars[barOneIndex].style;\n          const barTwo = arrayBars[barTwoIndex].style;\n          barOne.height = `${newHeight}px`;\n          barOne.background = \"#ff2e63\";\n          barTwo.background = \"#ff2e63\";\n          await pauseFor(currentSpeed);\n          barOne.background = \"\";\n          barTwo.background = \"\";\n          await pauseFor(currentSpeed);\n        }\n        break;\n\n      case \"Bubble\":\n        const bubbleResult = bubbleSort(bars);\n        timeLine = bubbleResult.timeLine;\n        sortedArray = bubbleResult.bars;\n        for (let i = 0; i < timeLine.length; i++) {\n          const [barOneIndex, barTwoIndex, heightOne, HeightTwo] = timeLine[i];\n          const barOne = arrayBars[barOneIndex].style;\n          const barTwo = arrayBars[barTwoIndex].style;\n          barOne.height = `${HeightTwo}px`;\n          barTwo.height = `${heightOne}px`;\n          barOne.background = \"#ff2e63\";\n          barTwo.background = \"#ff2e63\";\n          await pauseFor(currentSpeed);\n          barOne.background = \"\";\n          barTwo.background = \"\";\n          await pauseFor(currentSpeed);\n        }\n        break;\n\n      case \"Quick\":\n        const quickResult = quickSort(bars);\n        timeLine = quickResult.timeLine;\n        sortedArray = quickResult.bars;\n        for (let i = 0; i < timeLine.length; i++) {\n          const [pivotIndex, barIndex, barHeight] = timeLine[i];\n          const barOne = arrayBars[barIndex].style;\n          const pivot = arrayBars[pivotIndex].style;\n          barOne.height = `${barHeight}px`;\n          barOne.background = \"##ff2e63\";\n          pivot.background = \"#1b1b2f\";\n          await pauseFor(currentSpeed);\n          barOne.background = \"\";\n          pivot.background = \"\";\n        }\n        break;\n\n      case \"Insertion\":\n        const insertionResult = insertionSort(bars);\n        timeLine = insertionResult.timeLine;\n        sortedArray = insertionResult.bars;\n        for (let i = 0; i < timeLine.length; i++) {\n          const [barIndex, barHeight] = timeLine[i];\n          const barOne = arrayBars[barIndex].style;\n          barOne.height = `${barHeight}px`;\n          barOne.background = \"#ff2e63\";\n          await pauseFor(currentSpeed);\n          barOne.background = \"\";\n          await pauseFor(currentSpeed);\n        }\n        break;\n\n      default:\n        alert(\"There has been an error please refresh\");\n        break;\n    }\n\n    changeBarsClass(\"bar slowTransition colouredIn\");\n    setCurrentAlgorithm(\"\");\n    setBars(sortedArray);\n  }\n\n  return (\n    <div>\n      <Sidebar\n        onReset={generateArray}\n        onSortButtonPress={handleTimeline}\n        currentAlgorithm={currentAlgorithm}\n        onSpeedChange={setCurrentSpeed}\n        algorithmSpeed={currentSpeed}\n      />\n      <Visualizer bars={bars} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}